{
  "hash": "71d5801292c8810736e0f57ad2b773ff",
  "result": {
    "markdown": "---\ntitle: \"Scraping top 250 movies on IMDB\"\nsubtitle: \"<br><br> Data Science in a Box\"\nauthor: \"[datasciencebox.org](https://datasciencebox.org/)\"\noutput:\n  xaringan::moon_reader:\n    css: [\"../xaringan-themer.css\", \"../slides.css\"]\n    lib_dir: libs\n    anchor_sections: FALSE\n    nature:\n      ratio: \"16:9\"\n      highlightLines: true\n      highlightStyle: solarized-light\n      countIncrementalSlides: false\n---\n\n\n\n\nlayout: true\n  \n<div class=\"my-footer\">\n<span>\n<a href=\"https://datasciencebox.org\" target=\"_blank\">datasciencebox.org</a>\n</span>\n</div> \n\n---\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nclass: middle\n\n# Top 250 movies on IMDB\n\n\n---\n\n## Top 250 movies on IMDB\n\nTake a look at the source code, look for the tag `table` tag:\n<br>\nhttp://www.imdb.com/chart/top\n\n.pull-left[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/imdb-top-250.png){fig-align='center' width=100%}\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/imdb-top-250-source.png){fig-align='center' width=94%}\n:::\n:::\n]\n\n\n---\n\n\n## First check if you're allowed!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(robotstxt)\npaths_allowed(\"http://www.imdb.com\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nvs. e.g.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npaths_allowed(\"http://www.facebook.com\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n---\n\n## Plan\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/plan.png){fig-align='center' width=90%}\n:::\n:::\n\n---\n\n\n## Plan\n\n1. Read the whole page\n\n2. Scrape movie titles and save as `titles` \n\n3. Scrape years movies were made in and save as `years`\n\n4. Scrape IMDB ratings and save as `ratings`\n\n5. Create a data frame called `imdb_top_250` with variables `title`, `year`, and `rating`\n\n\n---\n\nclass: middle\n\n# Step 1. Read the whole page\n\n---\n\n\n## Read the whole page\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npage <- read_html(\"https://www.imdb.com/chart/top/\")\npage\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{html_document}\n<html xmlns:og=\"http://ogp.me/ns#\" xmlns:fb=\"http://www.facebook.com/2008/fbml\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html ...\n[2] <body id=\"styleguide-v2\" class=\"fixed\">\\n            <img  ...\n```\n:::\n:::\n\n---\n\n## A webpage in R\n\n- Result is a list with 2 elements\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntypeof(page)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n:::\n\n--\n\n- that we need to convert to something more familiar, like a data frame....\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nclass(page)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"xml_document\" \"xml_node\"    \n```\n:::\n:::\n\n---\n\n\nclass: middle\n\n# Step 2. Scrape movie titles and save as `titles` \n\n\n---\n\n## Scrape movie titles\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/titles.png){fig-align='center' width=70%}\n:::\n:::\n\n---\n\n\n## Scrape the nodes\n\n.pull-left[\n\n::: {.cell layout-align=\"center\" output.lines='17'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".titleColumn a\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (250)}\n [1] <a href=\"/title/tt0111161/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [2] <a href=\"/title/tt0068646/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [3] <a href=\"/title/tt0468569/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [4] <a href=\"/title/tt0071562/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [5] <a href=\"/title/tt0050083/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [6] <a href=\"/title/tt0108052/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [7] <a href=\"/title/tt0167260/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [8] <a href=\"/title/tt0110912/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n [9] <a href=\"/title/tt0120737/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[10] <a href=\"/title/tt0060196/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[11] <a href=\"/title/tt0109830/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[12] <a href=\"/title/tt0137523/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[13] <a href=\"/title/tt1375666/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[14] <a href=\"/title/tt0167261/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[15] <a href=\"/title/tt0080684/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n[16] <a href=\"/title/tt0133093/?pf_rd_m=A2FGELUUNOQJNL&amp;pf_ ...\n...\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/titles.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Extract the text from the nodes\n\n.pull-left[\n::: {.cell layout-align=\"center\" output.lines='16'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".titleColumn a\") %>%\n  html_text()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"The Shawshank Redemption\"                                            \n  [2] \"The Godfather\"                                                       \n  [3] \"The Dark Knight\"                                                     \n  [4] \"The Godfather Part II\"                                               \n  [5] \"12 Angry Men\"                                                        \n  [6] \"Schindler's List\"                                                    \n  [7] \"The Lord of the Rings: The Return of the King\"                       \n  [8] \"Pulp Fiction\"                                                        \n  [9] \"The Lord of the Rings: The Fellowship of the Ring\"                   \n [10] \"The Good, the Bad and the Ugly\"                                      \n [11] \"Forrest Gump\"                                                        \n [12] \"Fight Club\"                                                          \n [13] \"Inception\"                                                           \n [14] \"The Lord of the Rings: The Two Towers\"                               \n [15] \"Star Wars: Episode V - The Empire Strikes Back\"                      \n [16] \"The Matrix\"                                                          \n...\n```\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/titles.png){fig-align='center' width=100%}\n:::\n:::\n]\n\n---\n\n\n## Save as `titles`\n\n.pull-left[\n\n::: {.cell layout-align=\"center\" output.lines='14'}\n\n```{.r .cell-code}\ntitles <- page %>%\n  html_nodes(\".titleColumn a\") %>%\n  html_text()\n\ntitles\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"The Shawshank Redemption\"                                            \n  [2] \"The Godfather\"                                                       \n  [3] \"The Dark Knight\"                                                     \n  [4] \"The Godfather Part II\"                                               \n  [5] \"12 Angry Men\"                                                        \n  [6] \"Schindler's List\"                                                    \n  [7] \"The Lord of the Rings: The Return of the King\"                       \n  [8] \"Pulp Fiction\"                                                        \n  [9] \"The Lord of the Rings: The Fellowship of the Ring\"                   \n [10] \"The Good, the Bad and the Ugly\"                                      \n [11] \"Forrest Gump\"                                                        \n [12] \"Fight Club\"                                                          \n [13] \"Inception\"                                                           \n [14] \"The Lord of the Rings: The Two Towers\"                               \n...\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/titles.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\nclass: middle\n\n# Step 3. Scrape year movies were made and save as `years`\n\n---\n\n\n## Scrape years movies were made in\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/years.png){fig-align='center' width=70%}\n:::\n:::\n\n---\n\n## Scrape the nodes\n\n.pull-left[\n::: {.cell layout-align=\"center\" output.lines='17'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".secondaryInfo\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (250)}\n [1] <span class=\"secondaryInfo\">(1994)</span>\n [2] <span class=\"secondaryInfo\">(1972)</span>\n [3] <span class=\"secondaryInfo\">(2008)</span>\n [4] <span class=\"secondaryInfo\">(1974)</span>\n [5] <span class=\"secondaryInfo\">(1957)</span>\n [6] <span class=\"secondaryInfo\">(1993)</span>\n [7] <span class=\"secondaryInfo\">(2003)</span>\n [8] <span class=\"secondaryInfo\">(1994)</span>\n [9] <span class=\"secondaryInfo\">(2001)</span>\n[10] <span class=\"secondaryInfo\">(1966)</span>\n[11] <span class=\"secondaryInfo\">(1994)</span>\n[12] <span class=\"secondaryInfo\">(1999)</span>\n[13] <span class=\"secondaryInfo\">(2010)</span>\n[14] <span class=\"secondaryInfo\">(2002)</span>\n[15] <span class=\"secondaryInfo\">(1980)</span>\n[16] <span class=\"secondaryInfo\">(1999)</span>\n...\n```\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/years.png){fig-align='center' width=100%}\n:::\n:::\n]\n\n---\n\n\n## Extract the text from the nodes\n\n.pull-left[\n\n::: {.cell layout-align=\"center\" output.lines='16'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".secondaryInfo\") %>%\n  html_text()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"(1994)\" \"(1972)\" \"(2008)\" \"(1974)\" \"(1957)\" \"(1993)\"\n  [7] \"(2003)\" \"(1994)\" \"(2001)\" \"(1966)\" \"(1994)\" \"(1999)\"\n [13] \"(2010)\" \"(2002)\" \"(1980)\" \"(1999)\" \"(1990)\" \"(1975)\"\n [19] \"(1995)\" \"(1954)\" \"(1946)\" \"(1991)\" \"(2002)\" \"(1998)\"\n [25] \"(1997)\" \"(1999)\" \"(2014)\" \"(1977)\" \"(1991)\" \"(1985)\"\n [31] \"(2001)\" \"(1960)\" \"(2002)\" \"(1994)\" \"(2019)\" \"(1994)\"\n [37] \"(2000)\" \"(1998)\" \"(1995)\" \"(2006)\" \"(2006)\" \"(1942)\"\n [43] \"(2022)\" \"(2014)\" \"(2011)\" \"(1936)\" \"(1962)\" \"(1968)\"\n [49] \"(1988)\" \"(1954)\" \"(1979)\" \"(1931)\" \"(1988)\" \"(2000)\"\n [55] \"(1979)\" \"(1981)\" \"(2012)\" \"(2008)\" \"(2006)\" \"(1950)\"\n [61] \"(1957)\" \"(1980)\" \"(1940)\" \"(1957)\" \"(2018)\" \"(1986)\"\n [67] \"(1999)\" \"(1964)\" \"(2012)\" \"(2018)\" \"(2019)\" \"(2003)\"\n [73] \"(1995)\" \"(1984)\" \"(1995)\" \"(2017)\" \"(1981)\" \"(2009)\"\n [79] \"(1997)\" \"(2019)\" \"(1984)\" \"(1997)\" \"(2000)\" \"(2010)\"\n [85] \"(2016)\" \"(1952)\" \"(2009)\" \"(1983)\" \"(1968)\" \"(2004)\"\n [91] \"(1992)\" \"(1963)\" \"(2018)\" \"(1941)\" \"(1962)\" \"(2012)\"\n...\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/years.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Clean up the text\n\nWe need to go from `\"(1994)\"` to `1994`:\n\n- Remove `(` and `)`: string manipulation\n\n- Convert to numeric: `as.numeric()`\n\n---\n\n\n## stringr\n\n.pull-left-wide[\n- **stringr** provides a cohesive set of functions designed to make working with strings as easy as possible\n- Functions in stringr start with `str_*()`, e.g.\n  - `str_remove()` to remove a pattern from a string\n\n  ::: {.cell layout-align=\"center\"}\n  \n  ```{.r .cell-code}\n   str_remove(string = \"jello\", pattern = \"el\")\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  ```\n  [1] \"jlo\"\n  ```\n  :::\n  :::\n\n  - `str_replace()` to replace a pattern with another\n\n  ::: {.cell layout-align=\"center\"}\n  \n  ```{.r .cell-code}\n  str_replace(string = \"jello\", pattern = \"j\", replacement = \"h\")\n  ```\n  \n  ::: {.cell-output .cell-output-stdout}\n  ```\n  [1] \"hello\"\n  ```\n  :::\n  :::\n\n]\n.pull-right-narrow[\n\n::: {.cell layout-align=\"left\"}\n::: {.cell-output-display}\n![](img/stringr.png){fig-align='left' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Clean up the text\n\n::: {.cell layout-align=\"center\" output.lines='15'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".secondaryInfo\") %>%\n  html_text() %>%\n  str_remove(\"\\\\(\") # remove (\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"1994)\" \"1972)\" \"2008)\" \"1974)\" \"1957)\" \"1993)\" \"2003)\"\n  [8] \"1994)\" \"2001)\" \"1966)\" \"1994)\" \"1999)\" \"2010)\" \"2002)\"\n [15] \"1980)\" \"1999)\" \"1990)\" \"1975)\" \"1995)\" \"1954)\" \"1946)\"\n [22] \"1991)\" \"2002)\" \"1998)\" \"1997)\" \"1999)\" \"2014)\" \"1977)\"\n [29] \"1991)\" \"1985)\" \"2001)\" \"1960)\" \"2002)\" \"1994)\" \"2019)\"\n [36] \"1994)\" \"2000)\" \"1998)\" \"1995)\" \"2006)\" \"2006)\" \"1942)\"\n [43] \"2022)\" \"2014)\" \"2011)\" \"1936)\" \"1962)\" \"1968)\" \"1988)\"\n [50] \"1954)\" \"1979)\" \"1931)\" \"1988)\" \"2000)\" \"1979)\" \"1981)\"\n [57] \"2012)\" \"2008)\" \"2006)\" \"1950)\" \"1957)\" \"1980)\" \"1940)\"\n [64] \"1957)\" \"2018)\" \"1986)\" \"1999)\" \"1964)\" \"2012)\" \"2018)\"\n [71] \"2019)\" \"2003)\" \"1995)\" \"1984)\" \"1995)\" \"2017)\" \"1981)\"\n [78] \"2009)\" \"1997)\" \"2019)\" \"1984)\" \"1997)\" \"2000)\" \"2010)\"\n [85] \"2016)\" \"1952)\" \"2009)\" \"1983)\" \"1968)\" \"2004)\" \"1992)\"\n [92] \"1963)\" \"2018)\" \"1941)\" \"1962)\" \"2012)\" \"1959)\" \"1931)\"\n [99] \"1958)\" \"2001)\" \"1971)\" \"1985)\" \"1987)\" \"1944)\" \"1960)\"\n...\n```\n:::\n:::\n\n---\n\n\n## Clean up the text\n\n\n::: {.cell layout-align=\"center\" output.lines='14'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".secondaryInfo\") %>%\n  html_text() %>%\n  str_remove(\"\\\\(\") %>% # remove (\n  str_remove(\"\\\\)\") # remove )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"1994\" \"1972\" \"2008\" \"1974\" \"1957\" \"1993\" \"2003\" \"1994\"\n  [9] \"2001\" \"1966\" \"1994\" \"1999\" \"2010\" \"2002\" \"1980\" \"1999\"\n [17] \"1990\" \"1975\" \"1995\" \"1954\" \"1946\" \"1991\" \"2002\" \"1998\"\n [25] \"1997\" \"1999\" \"2014\" \"1977\" \"1991\" \"1985\" \"2001\" \"1960\"\n [33] \"2002\" \"1994\" \"2019\" \"1994\" \"2000\" \"1998\" \"1995\" \"2006\"\n [41] \"2006\" \"1942\" \"2022\" \"2014\" \"2011\" \"1936\" \"1962\" \"1968\"\n [49] \"1988\" \"1954\" \"1979\" \"1931\" \"1988\" \"2000\" \"1979\" \"1981\"\n [57] \"2012\" \"2008\" \"2006\" \"1950\" \"1957\" \"1980\" \"1940\" \"1957\"\n [65] \"2018\" \"1986\" \"1999\" \"1964\" \"2012\" \"2018\" \"2019\" \"2003\"\n [73] \"1995\" \"1984\" \"1995\" \"2017\" \"1981\" \"2009\" \"1997\" \"2019\"\n [81] \"1984\" \"1997\" \"2000\" \"2010\" \"2016\" \"1952\" \"2009\" \"1983\"\n [89] \"1968\" \"2004\" \"1992\" \"1963\" \"2018\" \"1941\" \"1962\" \"2012\"\n [97] \"1959\" \"1931\" \"1958\" \"2001\" \"1971\" \"1985\" \"1987\" \"1944\"\n[105] \"1960\" \"1983\" \"1952\" \"1973\" \"1962\" \"1976\" \"1997\" \"2009\"\n...\n```\n:::\n:::\n\n---\n\n## Convert to numeric\n\n::: {.cell layout-align=\"center\" output.lines='13'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\".secondaryInfo\") %>%\n  html_text() %>%\n  str_remove(\"\\\\(\") %>% # remove (\n  str_remove(\"\\\\)\") %>% # remove )\n  as.numeric()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 1994 1972 2008 1974 1957 1993 2003 1994 2001 1966 1994 1999\n [13] 2010 2002 1980 1999 1990 1975 1995 1954 1946 1991 2002 1998\n [25] 1997 1999 2014 1977 1991 1985 2001 1960 2002 1994 2019 1994\n [37] 2000 1998 1995 2006 2006 1942 2022 2014 2011 1936 1962 1968\n [49] 1988 1954 1979 1931 1988 2000 1979 1981 2012 2008 2006 1950\n [61] 1957 1980 1940 1957 2018 1986 1999 1964 2012 2018 2019 2003\n [73] 1995 1984 1995 2017 1981 2009 1997 2019 1984 1997 2000 2010\n [85] 2016 1952 2009 1983 1968 2004 1992 1963 2018 1941 1962 2012\n [97] 1959 1931 1958 2001 1971 1985 1987 1944 1960 1983 1952 1973\n[109] 1962 1976 1997 2009 1995 2020 1927 2011 2000 1988 2010 1989\n[121] 1948 2021 2019 2007 2004 1965 2005 2016 1921 1959 2022 2020\n[133] 1950 2018 2013 1961 1992 1995 1985 2006 2007 1999 2001 1975\n[145] 1998 1961 1948 2010 1950 1963 1993 2003 2007 2003 1980 1980\n...\n```\n:::\n:::\n\n---\n\n\n## Save as `years`\n\n.pull-left[\n\n::: {.cell layout-align=\"center\" output.lines='11'}\n\n```{.r .cell-code}\nyears <- page %>%\n  html_nodes(\".secondaryInfo\") %>%\n  html_text() %>%\n  str_remove(\"\\\\(\") %>% # remove (\n  str_remove(\"\\\\)\") %>% # remove )\n  as.numeric()\n\nyears\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 1994 1972 2008 1974 1957 1993 2003 1994 2001 1966 1994 1999\n [13] 2010 2002 1980 1999 1990 1975 1995 1954 1946 1991 2002 1998\n [25] 1997 1999 2014 1977 1991 1985 2001 1960 2002 1994 2019 1994\n [37] 2000 1998 1995 2006 2006 1942 2022 2014 2011 1936 1962 1968\n [49] 1988 1954 1979 1931 1988 2000 1979 1981 2012 2008 2006 1950\n [61] 1957 1980 1940 1957 2018 1986 1999 1964 2012 2018 2019 2003\n [73] 1995 1984 1995 2017 1981 2009 1997 2019 1984 1997 2000 2010\n [85] 2016 1952 2009 1983 1968 2004 1992 1963 2018 1941 1962 2012\n [97] 1959 1931 1958 2001 1971 1985 1987 1944 1960 1983 1952 1973\n[109] 1962 1976 1997 2009 1995 2020 1927 2011 2000 1988 2010 1989\n[121] 1948 2021 2019 2007 2004 1965 2005 2016 1921 1959 2022 2020\n...\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/years.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\nclass: middle\n\n# Step 4. Scrape IMDB ratings and save as `ratings`\n\n---\n\n\n## Scrape IMDB ratings\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/ratings.png){fig-align='center' width=70%}\n:::\n:::\n\n---\n\n## Scrape the nodes\n\n.pull-left[\n::: {.cell layout-align=\"center\" output.lines='17'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\"strong\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (250)}\n [1] <strong title=\"9.2 based on 2,598,645 user ratings\">9.2</ ...\n [2] <strong title=\"9.2 based on 1,794,026 user ratings\">9.2</ ...\n [3] <strong title=\"9.0 based on 2,569,892 user ratings\">9.0</ ...\n [4] <strong title=\"9.0 based on 1,236,609 user ratings\">9.0</ ...\n [5] <strong title=\"8.9 based on 767,801 user ratings\">8.9</st ...\n [6] <strong title=\"8.9 based on 1,321,815 user ratings\">8.9</ ...\n [7] <strong title=\"8.9 based on 1,784,955 user ratings\">8.9</ ...\n [8] <strong title=\"8.9 based on 1,992,205 user ratings\">8.9</ ...\n [9] <strong title=\"8.8 based on 1,806,011 user ratings\">8.8</ ...\n[10] <strong title=\"8.8 based on 745,445 user ratings\">8.8</st ...\n[11] <strong title=\"8.8 based on 2,007,345 user ratings\">8.8</ ...\n[12] <strong title=\"8.8 based on 2,046,577 user ratings\">8.8</ ...\n[13] <strong title=\"8.7 based on 2,280,275 user ratings\">8.7</ ...\n[14] <strong title=\"8.7 based on 1,612,058 user ratings\">8.7</ ...\n[15] <strong title=\"8.7 based on 1,257,425 user ratings\">8.7</ ...\n[16] <strong title=\"8.7 based on 1,866,063 user ratings\">8.7</ ...\n...\n```\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/ratings.png){fig-align='center' width=100%}\n:::\n:::\n]\n\n---\n\n\n## Extract the text from the nodes\n\n.pull-left[\n\n::: {.cell layout-align=\"center\" output.lines='16'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\"strong\") %>%\n  html_text()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"9.2\" \"9.2\" \"9.0\" \"9.0\" \"8.9\" \"8.9\" \"8.9\" \"8.9\" \"8.8\" \"8.8\"\n [11] \"8.8\" \"8.8\" \"8.7\" \"8.7\" \"8.7\" \"8.7\" \"8.7\" \"8.6\" \"8.6\" \"8.6\"\n [21] \"8.6\" \"8.6\" \"8.6\" \"8.6\" \"8.6\" \"8.6\" \"8.6\" \"8.6\" \"8.5\" \"8.5\"\n [31] \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\"\n [41] \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.5\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\"\n [51] \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\"\n [61] \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.4\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\"\n [71] \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\"\n [81] \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\"\n [91] \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.3\" \"8.2\" \"8.2\"\n[101] \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\"\n[111] \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\"\n[121] \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\"\n[131] \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\"\n[141] \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.2\" \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\"\n[151] \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\" \"8.1\"\n...\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/ratings.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Convert to numeric\n\n.pull-left[\n::: {.cell layout-align=\"center\" output.lines='15'}\n\n```{.r .cell-code}\npage %>%\n  html_nodes(\"strong\") %>%\n  html_text() %>%\n  as.numeric()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 9.2 9.2 9.0 9.0 8.9 8.9 8.9 8.9 8.8 8.8 8.8 8.8 8.7 8.7 8.7\n [16] 8.7 8.7 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.5 8.5\n [31] 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5\n [46] 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4\n [61] 8.4 8.4 8.4 8.4 8.4 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3\n [76] 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3\n [91] 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.2 8.2 8.2 8.2 8.2 8.2 8.2\n[106] 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2\n[121] 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2\n[136] 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.1 8.1 8.1 8.1 8.1\n[151] 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1\n[166] 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1\n[181] 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1\n[196] 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1\n[211] 8.1 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0 8.0\n...\n```\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/ratings.png){fig-align='center' width=100%}\n:::\n:::\n]\n\n---\n\n\n## Save as `ratings`\n\n.pull-left[\n\n::: {.cell layout-align=\"center\" output.lines='12'}\n\n```{.r .cell-code}\nratings <- page %>%\n  html_nodes(\"strong\") %>%\n  html_text() %>%\n  as.numeric()\n\nratings\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 9.2 9.2 9.0 9.0 8.9 8.9 8.9 8.9 8.8 8.8 8.8 8.8 8.7 8.7 8.7\n [16] 8.7 8.7 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.6 8.5 8.5\n [31] 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5 8.5\n [46] 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4 8.4\n [61] 8.4 8.4 8.4 8.4 8.4 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3\n [76] 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3\n [91] 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.3 8.2 8.2 8.2 8.2 8.2 8.2 8.2\n[106] 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2\n[121] 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2\n[136] 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.1 8.1 8.1 8.1 8.1\n[151] 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1\n[166] 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1 8.1\n...\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/ratings.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\nclass: middle\n\n# Step 5. Create a data frame called `imdb_top_250`\n\n---\n\n\n## Create a data frame: `imdb_top_250`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimdb_top_250 <- tibble(\n  title = titles, \n  year = years, \n  rating = ratings\n  )\n\nimdb_top_250\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 250 × 3\n  title                     year rating\n  <chr>                    <dbl>  <dbl>\n1 The Shawshank Redemption  1994    9.2\n2 The Godfather             1972    9.2\n3 The Dark Knight           2008    9  \n4 The Godfather Part II     1974    9  \n5 12 Angry Men              1957    8.9\n6 Schindler's List          1993    8.9\n# … with 244 more rows\n```\n:::\n:::\n\n---\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-1b4ff99564eb6e8884a5\" style=\"width:100%;height:400px;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1b4ff99564eb6e8884a5\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\"],[\"The Shawshank Redemption\",\"The Godfather\",\"The Dark Knight\",\"The Godfather Part II\",\"12 Angry Men\",\"Schindler's List\",\"The Lord of the Rings: The Return of the King\",\"Pulp Fiction\",\"The Lord of the Rings: The Fellowship of the Ring\",\"The Good, the Bad and the Ugly\",\"Forrest Gump\",\"Fight Club\",\"Inception\",\"The Lord of the Rings: The Two Towers\",\"Star Wars: Episode V - The Empire Strikes Back\",\"The Matrix\",\"Goodfellas\",\"One Flew Over the Cuckoo's Nest\",\"Se7en\",\"Seven Samurai\",\"It's a Wonderful Life\",\"The Silence of the Lambs\",\"City of God\",\"Saving Private Ryan\",\"Life Is Beautiful\",\"The Green Mile\",\"Interstellar\",\"Star Wars\",\"Terminator 2: Judgment Day\",\"Back to the Future\",\"Spirited Away\",\"Psycho\",\"The Pianist\",\"Léon: The Professional\",\"Parasite\",\"The Lion King\",\"Gladiator\",\"American History X\",\"The Usual Suspects\",\"The Departed\",\"The Prestige\",\"Casablanca\",\"Top Gun: Maverick\",\"Whiplash\",\"The Intouchables\",\"Modern Times\",\"Hara-Kiri\",\"Once Upon a Time in the West\",\"Grave of the Fireflies\",\"Rear Window\",\"Alien\",\"City Lights\",\"Cinema Paradiso\",\"Memento\",\"Apocalypse Now\",\"Indiana Jones and the Raiders of the Lost Ark\",\"Django Unchained\",\"WALL·E\",\"The Lives of Others\",\"Sunset Blvd.\",\"Paths of Glory\",\"The Shining\",\"The Great Dictator\",\"Witness for the Prosecution\",\"Avengers: Infinity War\",\"Aliens\",\"American Beauty\",\"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\"The Dark Knight Rises\",\"Spider-Man: Into the Spider-Verse\",\"Joker\",\"Oldboy\",\"Braveheart\",\"Amadeus\",\"Toy Story\",\"Coco\",\"The Boat\",\"Inglourious Basterds\",\"Princess Mononoke\",\"Avengers: Endgame\",\"Once Upon a Time in America\",\"Good Will Hunting\",\"Requiem for a Dream\",\"Toy Story 3\",\"Your Name.\",\"Singin' in the Rain\",\"3 Idiots\",\"Star Wars: Episode VI - Return of the Jedi\",\"2001: A Space Odyssey\",\"Eternal Sunshine of the Spotless Mind\",\"Reservoir Dogs\",\"High and Low\",\"Capernaum\",\"Citizen Kane\",\"Lawrence of Arabia\",\"The Hunt\",\"North by Northwest\",\"M\",\"Vertigo\",\"Amélie\",\"A Clockwork Orange\",\"Come and See\",\"Full Metal Jacket\",\"Double Indemnity\",\"The Apartment\",\"Scarface\",\"Ikiru\",\"The Sting\",\"To Kill a Mockingbird\",\"Taxi Driver\",\"L.A. Confidential\",\"Up\",\"Heat\",\"Hamilton\",\"Metropolis\",\"A Separation\",\"Snatch\",\"Die Hard\",\"Incendies\",\"Indiana Jones and the Last Crusade\",\"Bicycle Thieves\",\"Spider-Man: No Way Home\",\"1917\",\"Like Stars on Earth\",\"Downfall\",\"For a Few Dollars More\",\"Batman Begins\",\"Dangal\",\"The Kid\",\"Some Like It Hot\",\"Everything Everywhere All at Once\",\"The Father\",\"All About Eve\",\"Green Book\",\"The Wolf of Wall Street\",\"Judgment at Nuremberg\",\"Unforgiven\",\"Casino\",\"Ran\",\"Pan's Labyrinth\",\"There Will Be Blood\",\"The Sixth Sense\",\"A Beautiful Mind\",\"Monty Python and the Holy Grail\",\"The Truman Show\",\"Yojimbo\",\"The Treasure of the Sierra Madre\",\"Shutter Island\",\"Rashomon\",\"The Great Escape\",\"Jurassic Park\",\"Kill Bill: Vol. 1\",\"No Country for Old Men\",\"Finding Nemo\",\"The Elephant Man\",\"Raging Bull\",\"Chinatown\",\"Gone with the Wind\",\"V for Vendetta\",\"Inside Out\",\"The Thing\",\"Lock, Stock and Two Smoking Barrels\",\"Dial M for Murder\",\"The Secret in Their Eyes\",\"The Bridge on the River Kwai\",\"Howl's Moving Castle\",\"Three Billboards Outside Ebbing, Missouri\",\"Trainspotting\",\"Gran Torino\",\"Warrior\",\"Fargo\",\"My Neighbor Totoro\",\"Prisoners\",\"Million Dollar Baby\",\"The Gold Rush\",\"Blade Runner\",\"Catch Me If You Can\",\"On the Waterfront\",\"The Third Man\",\"Children of Heaven\",\"Ben-Hur\",\"12 Years a Slave\",\"The General\",\"Gone Girl\",\"Wild Strawberries\",\"Before Sunrise\",\"The Deer Hunter\",\"Harry Potter and the Deathly Hallows: Part 2\",\"In the Name of the Father\",\"The Grand Budapest Hotel\",\"Mr. Smith Goes to Washington\",\"The Wages of Fear\",\"Barry Lyndon\",\"Sherlock Jr.\",\"Memories of Murder\",\"Room\",\"Hacksaw Ridge\",\"Klaus\",\"The Seventh Seal\",\"Wild Tales\",\"The Big Lebowski\",\"How to Train Your Dragon\",\"Mad Max: Fury Road\",\"Mary and Max\",\"Monsters, Inc.\",\"Jaws\",\"The Passion of Joan of Arc\",\"Hotel Rwanda\",\"Dead Poets Society\",\"Tokyo Story\",\"Pather Panchali\",\"Platoon\",\"Rocky\",\"Ford v Ferrari\",\"Stand by Me\",\"The Terminator\",\"Spotlight\",\"Rush\",\"Into the Wild\",\"Network\",\"The Wizard of Oz\",\"Logan\",\"Groundhog Day\",\"Ratatouille\",\"The Exorcist\",\"Before Sunset\",\"The Best Years of Our Lives\",\"The Incredibles\",\"To Be or Not to Be\",\"Rebecca\",\"The Grapes of Wrath\",\"The Battle of Algiers\",\"Hachi: A Dog's Tale\",\"Cool Hand Luke\",\"Amores perros\",\"Pirates of the Caribbean: The Curse of the Black Pearl\",\"The 400 Blows\",\"La Haine\",\"Persona\",\"Dersu Uzala\",\"Life of Brian\",\"My Father and My Son\",\"It Happened One Night\",\"The Sound of Music\",\"The Handmaiden\",\"Aladdin\",\"Gandhi\",\"The Help\",\"Jai Bhim\",\"Beauty and the Beast\"],[1994,1972,2008,1974,1957,1993,2003,1994,2001,1966,1994,1999,2010,2002,1980,1999,1990,1975,1995,1954,1946,1991,2002,1998,1997,1999,2014,1977,1991,1985,2001,1960,2002,1994,2019,1994,2000,1998,1995,2006,2006,1942,2022,2014,2011,1936,1962,1968,1988,1954,1979,1931,1988,2000,1979,1981,2012,2008,2006,1950,1957,1980,1940,1957,2018,1986,1999,1964,2012,2018,2019,2003,1995,1984,1995,2017,1981,2009,1997,2019,1984,1997,2000,2010,2016,1952,2009,1983,1968,2004,1992,1963,2018,1941,1962,2012,1959,1931,1958,2001,1971,1985,1987,1944,1960,1983,1952,1973,1962,1976,1997,2009,1995,2020,1927,2011,2000,1988,2010,1989,1948,2021,2019,2007,2004,1965,2005,2016,1921,1959,2022,2020,1950,2018,2013,1961,1992,1995,1985,2006,2007,1999,2001,1975,1998,1961,1948,2010,1950,1963,1993,2003,2007,2003,1980,1980,1974,1939,2005,2015,1982,1998,1954,2009,1957,2004,2017,1996,2008,2011,1996,1988,2013,2004,1925,1982,2002,1954,1949,1997,1959,2013,1926,2014,1957,1995,1978,2011,1993,2014,1939,1953,1975,1924,2003,2015,2016,2019,1957,2014,1998,2010,2015,2009,2001,1975,1928,2004,1989,1953,1955,1986,1976,2019,1986,1984,2015,2013,2007,1976,1939,2017,1993,2007,1973,2004,1946,2004,1942,1940,1940,1966,2009,1967,2000,2003,1959,1995,1966,1975,1979,2005,1934,1965,2016,1992,1982,2011,2021,1991],[9.2,9.2,9,9,8.9,8.9,8.9,8.9,8.8,8.8,8.8,8.8,8.7,8.7,8.7,8.7,8.7,8.6,8.6,8.6,8.6,8.6,8.6,8.6,8.6,8.6,8.6,8.6,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.5,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.4,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.3,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.2,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8.1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>title<\\/th>\\n      <th>year<\\/th>\\n      <th>rating<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n---\n\n\n## Clean up / enhance\n\nMay or may not be a lot of work depending on how messy the data are\n\n- See if you like what you got:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglimpse(imdb_top_250)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 250\nColumns: 3\n$ title  <chr> \"The Shawshank Redemption\", \"The Godfather\", \"Th…\n$ year   <dbl> 1994, 1972, 2008, 1974, 1957, 1993, 2003, 1994, …\n$ rating <dbl> 9.2, 9.2, 9.0, 9.0, 8.9, 8.9, 8.9, 8.9, 8.8, 8.8…\n```\n:::\n:::\n\n\n- Add a variable for rank\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimdb_top_250 <- imdb_top_250 %>%\n  mutate(rank = 1:nrow(imdb_top_250)) %>%\n  relocate(rank)\n```\n:::\n\n---\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 250 × 4\n    rank title                                        year rating\n   <int> <chr>                                       <dbl>  <dbl>\n 1     1 The Shawshank Redemption                     1994    9.2\n 2     2 The Godfather                                1972    9.2\n 3     3 The Dark Knight                              2008    9  \n 4     4 The Godfather Part II                        1974    9  \n 5     5 12 Angry Men                                 1957    8.9\n 6     6 Schindler's List                             1993    8.9\n 7     7 The Lord of the Rings: The Return of the K…  2003    8.9\n 8     8 Pulp Fiction                                 1994    8.9\n 9     9 The Lord of the Rings: The Fellowship of t…  2001    8.8\n10    10 The Good, the Bad and the Ugly               1966    8.8\n11    11 Forrest Gump                                 1994    8.8\n12    12 Fight Club                                   1999    8.8\n13    13 Inception                                    2010    8.7\n14    14 The Lord of the Rings: The Two Towers        2002    8.7\n15    15 Star Wars: Episode V - The Empire Strikes …  1980    8.7\n16    16 The Matrix                                   1999    8.7\n17    17 Goodfellas                                   1990    8.7\n18    18 One Flew Over the Cuckoo's Nest              1975    8.6\n19    19 Se7en                                        1995    8.6\n20    20 Seven Samurai                                1954    8.6\n# … with 230 more rows\n```\n:::\n:::\n\n---\n\n\nclass: middle\n\n# What next?\n\n\n---\n\n.question[\nWhich years have the most movies on the list?\n]\n\n--\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimdb_top_250 %>% \n  count(year, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 86 × 2\n   year     n\n  <dbl> <int>\n1  1995     8\n2  2004     7\n3  1957     6\n4  2003     6\n5  2009     6\n6  2019     6\n# … with 80 more rows\n```\n:::\n:::\n\n---\n\n\n.question[\nWhich 1995 movies made the list?\n]\n\n--\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimdb_top_250 %>% \n  filter(year == 1995) %>%\n  print(n = 8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 4\n   rank title               year rating\n  <int> <chr>              <dbl>  <dbl>\n1    19 Se7en               1995    8.6\n2    39 The Usual Suspects  1995    8.5\n3    73 Braveheart          1995    8.3\n4    75 Toy Story           1995    8.3\n5   113 Heat                1995    8.2\n6   138 Casino              1995    8.2\n7   186 Before Sunrise      1995    8.1\n8   238 La Haine            1995    8  \n```\n:::\n:::\n\n---\n\n.question[\nVisualize the average yearly rating for movies that made it on the top 250 list over time.\n]\n\n--\n\n.panelset[\n.panel[.panel-name[Plot]\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](u2-d19-top-250-imdb_files/figure-html/unnamed-chunk-46-1.png){fig-align='center' width=58%}\n:::\n:::\n]\n.panel[.panel-name[Code]\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimdb_top_250 %>% \n  group_by(year) %>%\n  summarise(avg_score = mean(rating)) %>%\n  ggplot(aes(y = avg_score, x = year)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"Year\", y = \"Average score\")\n```\n:::\n]\n]\n",
    "supporting": [
      "u2-d19-top-250-imdb_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/font-awesome/css/all.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/font-awesome/css/v4-shims.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/panelset/panelset.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/panelset/panelset.js\"></script>\n<script src=\"../../../site_libs/htmlwidgets/htmlwidgets.js\"></script>\n<link href=\"../../../site_libs/datatables-css/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/datatables-binding/datatables.js\"></script>\n<script src=\"../../../site_libs/jquery/jquery-3.6.0.min.js\"></script>\n<link href=\"../../../site_libs/dt-core/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/dt-core/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/dt-core/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}