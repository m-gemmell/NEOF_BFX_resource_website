{
  "hash": "3ec8b678b91bb7ae6349fbea7fe53188",
  "result": {
    "markdown": "---\ntitle: \"Functions\"\nsubtitle: \"<br><br> Data Science in a Box\"\nauthor: \"[datasciencebox.org](https://datasciencebox.org/)\"\noutput:\n  xaringan::moon_reader:\n    css: [\"../xaringan-themer.css\", \"../slides.css\"]\n    lib_dir: libs\n    anchor_sections: FALSE\n    nature:\n      ratio: \"16:9\"\n      highlightLines: true\n      highlightStyle: solarized-light\n      countIncrementalSlides: false\n---\n\n\n\n\nlayout: true\n  \n<div class=\"my-footer\">\n<span>\n<a href=\"https://datasciencebox.org\" target=\"_blank\">datasciencebox.org</a>\n</span>\n</div> \n\n---\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nclass: middle\n\n# First Minister's COVID speeches\n\n\n---\n\n## üèÅ Start with\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/fm-speeches.png){fig-align='center' width=75%}\n:::\n:::\n\n---\n\n\n## End with üõë\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 218 √ó 6\n   title                 date       location abstract text  url  \n   <chr>                 <date>     <chr>    <chr>    <chr> <chr>\n 1 Coronavirus (COVID-1‚Ä¶ 2021-04-20 St Andr‚Ä¶ Stateme‚Ä¶ \"Goo‚Ä¶ http‚Ä¶\n 2 Coronavirus (COVID-1‚Ä¶ 2021-04-13 St Andr‚Ä¶ Stateme‚Ä¶ \"Tha‚Ä¶ http‚Ä¶\n 3 Coronavirus (COVID-1‚Ä¶ 2021-04-06 St Andr‚Ä¶ Stateme‚Ä¶ \"Goo‚Ä¶ http‚Ä¶\n 4 Coronavirus (COVID-1‚Ä¶ 2021-03-30 St Andr‚Ä¶ Stateme‚Ä¶ \"Tha‚Ä¶ http‚Ä¶\n 5 Coronavirus (COVID-1‚Ä¶ 2021-03-24 Scottis‚Ä¶ Stateme‚Ä¶ \"Tha‚Ä¶ http‚Ä¶\n 6 Coronavirus (Covid-1‚Ä¶ 2021-03-23 The Sco‚Ä¶ Stateme‚Ä¶ \"Pre‚Ä¶ http‚Ä¶\n 7 Coronavirus (COVID-1‚Ä¶ 2021-03-18 Scottis‚Ä¶ Stateme‚Ä¶ \"Tha‚Ä¶ http‚Ä¶\n 8 Coronavirus (COVID-1‚Ä¶ 2021-03-17 St Andr‚Ä¶ Stateme‚Ä¶ \"\\nG‚Ä¶ http‚Ä¶\n 9 Coronavirus (COVID-1‚Ä¶ 2021-03-16 Scottis‚Ä¶ Stateme‚Ä¶ \"Pre‚Ä¶ http‚Ä¶\n10 Coronavirus (COVID-1‚Ä¶ 2021-03-15 St Andr‚Ä¶ Stateme‚Ä¶ \"\\nG‚Ä¶ http‚Ä¶\n11 Coronavirus (COVID-1‚Ä¶ 2021-03-11 Scottis‚Ä¶ Stateme‚Ä¶ \"I c‚Ä¶ http‚Ä¶\n12 Coronavirus (COVID-1‚Ä¶ 2021-03-09 Scottis‚Ä¶ Stateme‚Ä¶ \"Pre‚Ä¶ http‚Ä¶\n13 Coronavirus (COVID-1‚Ä¶ 2021-03-05 Scottis‚Ä¶ Parliam‚Ä¶ \"Hel‚Ä¶ http‚Ä¶\n14 Coronavirus (COVID-1‚Ä¶ 2021-03-04 Scottis‚Ä¶ Parliam‚Ä¶ \"I w‚Ä¶ http‚Ä¶\n15 Coronavirus (COVID-1‚Ä¶ 2021-03-02 Scottis‚Ä¶ Stateme‚Ä¶ \"Pre‚Ä¶ http‚Ä¶\n# ‚Ä¶ with 203 more rows\n```\n:::\n:::\n\n---\n\n#### .center[\n[www.gov.scot/collections/first-ministers-speeches](https://www.gov.scot/collections/first-ministers-speeches/)\n]\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/fm-speeches-annotated.png){fig-align='center' width=75%}\n:::\n:::\n\n---\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/fm-speech-oct-26-annotated.png){fig-align='center' width=65%}\n:::\n:::\n\n---\n\n## Plan\n\n1. Scrape `title`, `date`, `location`, `abstract`, and `text` from a few COVID-19 speech pages to develop the code\n\n2. Write a function that scrapes `title`, `date`, `location`, `abstract`, and `text` from COVID-19 speech pages\n\n3. Scrape the `url`s of COVID-19 speeches from the main page\n\n4. Use this function to scrape from each individual COVID-19 speech from these `url`s and create a data frame with the columns `title`, `date`, `location`, `abstract`, `text`, and `url`\n\n---\n\n\nclass: middle\n\n# Scrape data from a few COVID-19 speech pages\n\n\n---\n\n## Read page for 26 Oct speech\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nurl <- \"https://www.gov.scot/publications/coronavirus-covid-19-update-first-ministers-speech-26-october/\"\nspeech_page <- read_html(url)\n```\n:::\n\n\n\n.pull-left[\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nspeech_page\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{html_document}\n<html dir=\"ltr\" lang=\"en\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html ...\n[2] <body class=\"fontawesome site-header__container\">\\n\\n\\n\\n\\ ...\n```\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/fm-speech-oct-26.png){fig-align='center' width=80%}\n:::\n:::\n]\n\n---\n\n\n## Extract title\n\n.pull-left-wide[\n<br><br>\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntitle <- speech_page %>%\n    html_node(\".article-header__title\") %>%\n    html_text()\n\ntitle\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Coronavirus (COVID-19) update: First Minister's speech 26 October\"\n```\n:::\n:::\n\n]\n.pull-right-narrow[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/title.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Extract date\n\n.pull-left-wide[\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(lubridate)\n\nspeech_page %>%\n    html_node(\".content-data__list:nth-child(1) strong\") %>%\n    html_text() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"26 Oct 2020\"\n```\n:::\n\n```{.r .cell-code}\ndate <- speech_page %>%\n    html_node(\".content-data__list:nth-child(1) strong\") %>%\n    html_text() %>%\n    dmy()\ndate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2020-10-26\"\n```\n:::\n:::\n]\n.pull-right-narrow[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/date.png){fig-align='center' width=100%}\n:::\n:::\n]\n\n---\n\n\n## Extract location\n\n.pull-left-wide[\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlocation <- speech_page %>%\n    html_node(\".content-data__list+ .content-data__list strong\") %>%\n    html_text()\n\nlocation\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"St Andrew's House, Edinburgh\"\n```\n:::\n:::\n\n]\n.pull-right-narrow[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/location.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Extract abstract\n\n.pull-left-wide[\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nabstract <- speech_page %>%\n    html_node(\".leader--first-para p\") %>%\n    html_text()\n\nabstract\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Statement given by First Minister Nicola Sturgeon at a media briefing in St Andrew's House on Monday 26 October 2020.\"\n```\n:::\n:::\n]\n.pull-right-narrow[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/abstract.png){fig-align='center' width=100%}\n:::\n:::\n]\n\n---\n\n\n## Extract text\n\n.pull-left-wide[\n\n::: {.cell layout-align=\"center\" output.lines='11'}\n\n```{.r .cell-code}\ntext <- speech_page %>% \n    html_nodes(\"#preamble p\") %>%\n    html_text() %>%\n    list()\n\ntext\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n [1] \"\\nGood afternoon, and thanks for joining us. I want to start with the usual daily report on the COVID statistics.\"                                                                                                                                                                                                                                                                                                                  \n [2] \"The total number of positive cases reported yesterday was 1,122.\"                                                                                                                                                                                                                                                                                                                                                                   \n [3] \"This represents 7.1% of the total number of tests carried out. 428 of the new cases were in Greater Glasgow and Clyde, 274 in Lanarkshire, 105 in Lothian and 97 in Ayrshire and Arran.¬†\"                                                                                                                                                                                                                                           \n [4] \"The remaining cases were spread across the mainland health board regions.¬†\"                                                                                                                                                                                                                                                                                                                                                         \n [5] \"The total number of confirmed cases is now 57,874.\"                                                                                                                                                                                                                                                                                                                                                                                 \n [6] \"I can also confirm that 1,152 people are in hospital ‚Äì that is an increase of 36 from yesterday\"                                                                                                                                                                                                                                                                                                                                    \n [7] \"90 people are in intensive care, which is four more than yesterday.\"                                                                                                                                                                                                                                                                                                                                                                \n [8] \"And I regret to say that in the last 24 hours, one further death has been registered of a patient who first tested positive over the previous 28 days.¬† It is important though to remember that registration offices tend not to be open as normal over the weekend so the Sunday and Monday figures are often lower.\"                                                                                                              \n [9] \"We also reported 11 deaths on Saturday, and one yesterday.¬† So since the last briefing on Friday, 13 additional deaths have been registered. That takes the total number of deaths, under this measurement, to 2,701.\"                                                                                                                                                                                                              \n[10] \"That reminds us again of how dangerous this virus can be and I want to send my condolences to everyone who has lost someone.\"                                                                                                                                                                                                                                                                                                       \n...\n```\n:::\n:::\n\n]\n.pull-right-narrow[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/text.png){fig-align='center' width=100%}\n:::\n:::\n\n]\n\n\n---\n\n## Put it all in a data frame\n\n.pull-left[\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noct_26_speech <- tibble(\n  title    = title,\n  date     = date,\n  location = location,\n  abstract = abstract,\n  text     = text,\n  url      = url\n)\n\noct_26_speech\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 √ó 6\n  title                  date       location abstract text  url  \n  <chr>                  <date>     <chr>    <chr>    <lis> <chr>\n1 Coronavirus (COVID-19‚Ä¶ 2020-10-26 St Andr‚Ä¶ Stateme‚Ä¶ <chr> http‚Ä¶\n```\n:::\n:::\n]\n.pull-right[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/fm-speech-oct-26.png){fig-align='center' width=75%}\n:::\n:::\n]\n\n---\n\n\n## Read page for 23 Oct speech\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nurl <- \"https://www.gov.scot/publications/coronavirus-covid-19-update-first-ministers-speech-23-october/\"\nspeech_page <- read_html(url)\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nspeech_page\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{html_document}\n<html dir=\"ltr\" lang=\"en\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html ...\n[2] <body class=\"fontawesome site-header__container\">\\n\\n\\n\\n\\ ...\n```\n:::\n:::\n\n---\n\n## Extract components of 23 Oct speech\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntitle <- speech_page %>%\n  html_node(\".article-header__title\") %>%\n  html_text()\n\ndate <- speech_page %>%\n  html_node(\".content-data__list:nth-child(1) strong\") %>%\n  html_text() %>%\n  dmy()\n\nlocation <- speech_page %>%\n  html_node(\".content-data__list+ .content-data__list strong\") %>%\n  html_text()\n\nabstract <- speech_page %>%\n  html_node(\".leader--first-para p\") %>%\n  html_text()\n\ntext <- speech_page %>%\n  html_nodes(\"#preamble p\") %>%\n  html_text() %>%\n  list()\n```\n:::\n\n---\n\n\n## Put it all in a data frame\n\n.pull-left[\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noct_23_speech <- tibble(\n  title    = title,\n  date     = date,\n  location = location,\n  abstract = abstract,\n  text     = text,\n  url      = url\n)\n\noct_23_speech\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 √ó 6\n  title                  date       location abstract text  url  \n  <chr>                  <date>     <chr>    <chr>    <lis> <chr>\n1 Coronavirus (COVID-19‚Ä¶ 2020-10-23 St Andr‚Ä¶ Stateme‚Ä¶ <chr> http‚Ä¶\n```\n:::\n:::\n\n]\n.pull-right[\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/fm-speech-oct-23.png){fig-align='center' width=75%}\n:::\n:::\n\n]\n\n\n---\n\nclass: middle\n\n.larger[\n.light-blue[\n.hand[\nthis is getting tiring...\n]\n]\n]\n\n---\n\n\nclass: middle\n\n# Functions\n\n\n---\n\n## When should you write a function?\n\n--\n.pull-left[\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/funct-all-things.png){fig-align='center' width=100%}\n:::\n:::\n]\n--\n.pull-right[\nWhen you‚Äôve copied and pasted a block of code more than twice.\n]\n\n---\n\n\n.question[\nHow many times will we need to copy and paste the code we developed to scrape data on all of First Minister's COVID-19 speeches?\n]\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/search-result.png){fig-align='center' width=55%}\n:::\n:::\n\n---\n\n## Why functions?\n\n- Automate common tasks in a more powerful and general way than copy-and-pasting:\n  - Give your function an evocative name that makes your code easier to understand\n  - As requirements change, only need to update code in one place, instead of many\n  - Eliminate chance of making incidental mistakes when you copy and paste (i.e. updating a variable name in one place, but not in another)\n\n--\n\n- Down the line: Improve your reach as a data scientist by writing functions (and packages!) that others use\n\n---\n\n\n.question[\nAssuming that the page structure is the same for each speech page, how many \"things\" do you need to know for each speech page to scrape the data we want from it? \n]\n\n.pull-left-wide[\n.xsmall[\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nurl_23_oct <- \"https://www.gov.scot/publications/coronavirus-covid-19-update-first-ministers-speech-23-october/\"\nspeech_page <- read_html(url_23_oct)\n\ntitle <- speech_page %>%\n  html_node(\".article-header__title\") %>%\n  html_text()\n\ndate <- speech_page %>%\n  html_node(\".content-data__list:nth-child(1) strong\") %>%\n  html_text() %>%\n  dmy()\n\nlocation <- speech_page %>%\n  html_node(\".content-data__list+ .content-data__list strong\") %>%\n  html_text()\n\nabstract <- speech_page %>%\n  html_node(\".leader--first-para p\") %>%\n  html_text()\n\ntext <- speech_page %>%\n  html_nodes(\"#preamble p\") %>%\n  html_text() %>%\n  list()\n\ntibble(\n  title = title, date = date, location = location,\n  abstract = abstract, text = text, url= url\n)\n```\n:::\n\n]\n]\n\n\n---\n\n## Turn your code into a function\n\n- Pick a short but informative **name**, preferably a verb.\n\n<br>\n<br>\n<br>\n<br>\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech <- \n```\n:::\n\n---\n\n\n## Turn your code into a function\n\n- Pick a short but evocative **name**, preferably a verb.\n- List inputs, or **arguments**, to the function inside `function`. If we had more the call would look like `function(x, y, z)`.\n\n<br>\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech <- function(x){\n  \n  \n  \n  \n  \n}  \n```\n:::\n\n---\n\n## Turn your code into a function\n\n- Pick a short but informative **name**, preferably a verb.\n- List inputs, or **arguments**, to the function inside `function`. If we had more the call would look like `function(x, y, z)`.\n- Place the **code** you have developed in body of the function, a `{` block that immediately follows `function(...)`.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech <- function(url){\n\n  # code we developed earlier to scrape info \n  # on single art piece goes here\n  \n}\n```\n:::\n\n---\n\n\n## `scrape_speech()`\n\n.pull-left-wide[\n.small[\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech <- function(url) {\n  \n  speech_page <- read_html(url)\n\n  title <- speech_page %>%\n    html_node(\".article-header__title\") %>%\n    html_text()\n\n  date <- speech_page %>%\n    html_node(\".content-data__list:nth-child(1) strong\") %>%\n    html_text() %>%\n    dmy()\n\n  location <- speech_page %>%\n    html_node(\".content-data__list+ .content-data__list strong\") %>%\n    html_text()\n\n  abstract <- speech_page %>%\n    html_node(\".leader--first-para p\") %>%\n    html_text()\n\n  text <- speech_page %>%\n    html_nodes(\"#preamble p\") %>%\n    html_text() %>%\n    list()\n\n  tibble(\n    title = title, date = date, location = location,\n    abstract = abstract, text = text, url = url\n  )\n}\n```\n:::\n\n]\n]\n\n\n---\n\n## Function in action\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech(url = \"https://www.gov.scot/publications/coronavirus-covid-19-update-first-ministers-speech-26-october/\") %>%\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 6\n$ title    <chr> NA\n$ date     <date> NA\n$ location <chr> NA\n$ abstract <chr> NA\n$ text     <list> <\"\\nGood afternoon, and thanks for joining us.‚Ä¶\n$ url      <chr> \"https://www.gov.scot/publications/coronaviru‚Ä¶\n```\n:::\n:::\n\n---\n\n\n## Function in action\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech(url = \"https://www.gov.scot/publications/coronavirus-covid-19-update-first-ministers-speech-23-october/\") %>%\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 6\n$ title    <chr> NA\n$ date     <date> NA\n$ location <chr> NA\n$ abstract <chr> NA\n$ text     <list> <\"\\nGood afternoon everyone. Thank you very mu‚Ä¶\n$ url      <chr> \"https://www.gov.scot/publications/coronaviru‚Ä¶\n```\n:::\n:::\n\n---\n\n## Function in action\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_speech(url = \"https://www.gov.scot/publications/coronavirus-covid-19-update-first-ministers-speech-22-october/\") %>%\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 6\n$ title    <chr> NA\n$ date     <date> NA\n$ location <chr> NA\n$ abstract <chr> NA\n$ text     <list> <\"\\nGood afternoon, let me start as usual with‚Ä¶\n$ url      <chr> \"https://www.gov.scot/publications/coronaviru‚Ä¶\n```\n:::\n:::\n\n---\n\n\nclass: middle\n\n# Writing functions\n\n\n---\n\n## What goes in / what comes out?\n\n.pull-left-wide[\n- They take input(s) defined in the function definition\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfunction([inputs separated by commas]){\n  # what to do with those inputs\n}\n```\n:::\n\n- By default they return the last value computed in the function\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nscrape_page <- function(x){\n  # do bunch of stuff with the input...\n  \n  # return a tibble\n  tibble(...)\n}\n```\n:::\n\n- You can define more outputs to be returned in a list as well as nice print methods (but we won't go there for now...)\n]\n\n---\n\n\n.question[\nWhat is going on here?\n]\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nadd_2 <- function(x){\n  x + 2\n  1000\n}\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nadd_2(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1000\n```\n:::\n\n```{.r .cell-code}\nadd_2(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1000\n```\n:::\n:::\n\n---\n\n## Naming functions\n\n> \"There are only two hard things in Computer Science: cache invalidation and naming things.\" - Phil Karlton\n\n---\n\n\n## Naming functions\n\n- Names should be short but clearly evoke what the function does\n\n--\n- Names should be verbs, not nouns\n\n--\n- Multi-word names should be separated by underscores (`snake_case` as opposed to `camelCase`)\n\n--\n- A family of functions should be named similarly (`scrape_page()`, `scrape_speech()` OR `str_remove()`, `str_replace()` etc.)\n\n--\n- Avoid overwriting existing (especially widely used) functions\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# JUST DON'T\nmean <- function(x){ \n  x * 3 \n  }\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/font-awesome/css/all.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/font-awesome/css/v4-shims.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/panelset/panelset.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/panelset/panelset.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}